buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}
apply plugin: 'com.android.application'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    packagingOptions {
        exclude 'proguard-project.txt'
        exclude 'project.properties'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/DEPENDENCIES'
    }

    defaultConfig {
        applicationId "com.amaze.filemanager"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 31
        versionName "3.0.1"
        multiDexEnabled false
    }

    signingConfigs {
        release
        config
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    sourceSets {
        main {
            /*manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src', 'src/main/java', 'src/main/java/']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res', 'src/main/res', 'src/main/res/']*/
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    productFlavors {
        fdroid {
            buildConfigField "boolean", "IS_VERSION_FDROID", "true"
        }
        play {
            buildConfigField "boolean", "IS_VERSION_FDROID", "false"
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    dependencies {
        provided fileTree(include: ['*.jar'], dir: 'libs')
        // Google Play Services
        compile('com.github.afollestad.material-dialogs:core:0.8.5.5@aar') {
            transitive = true
        }
        compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
        compile 'com.android.support:design:23.2.0'
        compile 'com.github.junrar:junrar:0.7'
        compile 'org.apache.commons:commons-compress:1.10'
        compile 'com.android.support:appcompat-v7:23.2.0'
        compile 'com.android.support:cardview-v7:23.2.0'

        compile 'org.sufficientlysecure:donations:2.3'

        compile 'com.github.clans:fab:1.6.1'

        compile 'com.google.android.gms:play-services:8.4.0'
        compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
        // Google Play Services
        playCompile 'com.google.android.gms:play-services-plus:7.8.0'

//    compile 'com.google.android.gms:play-services-ads:8.4.0'
        //    compile 'com.google.android.gms:play-services-gcm:8.4.0'

    compile 'com.google.android.gms:play-services-identity:8.4.0'

    compile('com.google.api-client:google-api-client-android:1.20.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    compile('com.google.apis:google-api-services-drive:v2-rev170-1.20.0') {
        exclude group: 'org.apache.httpcomponents'
    }
        compile 'com.github.shem8:material-login:1.3.0'
        compile('com.github.ozodrukh:CircularReveal:1.3.1@aar') {
            transitive = true;
        }
        compile files('libs/easemobchat_2.2.7.jar')
        compile files('libs/libGoogleAnalytics.jar')
    }
}


def Properties props = new Properties()
def propFile = new File('signing.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null &&
            props.containsKey('STORE_FILE') &&
            props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') &&
            props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}
